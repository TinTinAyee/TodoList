{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\Talanet Program\\\\TodoApp\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.tes(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo.id !== id);\n    setTodos(rem);\n  };\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan for Today ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoForm","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","addTodo","todo","text","tes","newTodos","removeTodo","id","removeArr","filter","rem","completeTodo","updatedTodos","map","isComplete","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Programming/Talanet Program/TodoApp/src/components/TodoList.jsx"],"sourcesContent":["import React, { useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.tes(todo.text)){\r\n            return;\r\n    }\r\n    const newTodos = [todo, ...todos];\r\n    setTodos(newTodos);\r\n    };\r\n    \r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo.id !== id);\r\n        setTodos(rem)\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Today ?</h1>\r\n            <TodoForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,OAAO,GAAGC,IAAI,IAAI;IACpB,IAAI,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,GAAG,CAACF,IAAI,CAACC,IAAI,CAAC,EAAC;MACrC;IACR;IACA,MAAME,QAAQ,GAAG,CAACH,IAAI,EAAE,GAAGH,KAAK,CAAC;IACjCC,QAAQ,CAACK,QAAQ,CAAC;EAClB,CAAC;EAED,MAAMC,UAAU,GAAGC,EAAE,IAAI;IACrB,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC,CAACU,MAAM,CAACP,IAAI,CAACK,EAAE,KAAKA,EAAE,CAAC;IACnDP,QAAQ,CAACU,GAAG,CAAC;EACjB,CAAC;EAED,MAAMC,YAAY,GAAGJ,EAAE,IAAI;IACvB,IAAIK,YAAY,GAAGb,KAAK,CAACc,GAAG,CAACX,IAAI,IAAI;MACjC,IAAIA,IAAI,CAACK,EAAE,KAAKA,EAAE,EAAE;QAChBL,IAAI,CAACY,UAAU,GAAG,CAACZ,IAAI,CAACY,UAAU;MACtC;MACA,OAAOZ,IAAI;IACf,CAAC,CAAC;IACFF,QAAQ,CAACY,YAAY,CAAC;EAC1B,CAAC;EACD,oBACIhB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpCvB,OAAA,CAACF,QAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACV;AAEd;AAACrB,EAAA,CA/BQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}