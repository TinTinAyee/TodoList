{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\Talanet Program\\\\TodoApp\\\\src\\\\components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(_ref) {\n  _s();\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n}\n_s(Todo, \"Lk+zX9mM8RlzHTP2VTuh+tHke4Q=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","TodoForm","TodoList","RiCloseCircleLine","TiEdit","jsxDEV","_jsxDEV","Todo","_ref","_s","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","index","className","isComplete","children","onClick","text","_c","$RefreshReg$"],"sources":["F:/Programming/Talanet Program/TodoApp/src/components/Todo.jsx"],"sourcesContent":["import React,{useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    \r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n    \r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n\r\n            <div className='icons'>\r\n                <TiEdit onClick={()=> setEdit({id:todo.id,value:todo.text})} className='edit-icon' />\r\n                <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='delete-icon'/>\r\n            </div>\r\n            \r\n     </div> \r\n  ));\r\n}\r\n\r\nexport default Todo\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAAC,IAAA,EAAkD;EAAAC,EAAA;EAAA,IAAjD;IAAEC,KAAK;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAAL,IAAA;EAEzD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAC7BgB,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGD,KAAK,IAAI;IAC1BJ,UAAU,CAACC,IAAI,CAACE,EAAE,EAAEC,KAAK,CAAC;IAC1BF,OAAO,CAAC;MACJC,EAAE,EAAE,IAAI;MACRC,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC;EAED,IAAIH,IAAI,CAACE,EAAE,EAAE;IACT,oBAAOV,OAAA,CAACL,QAAQ;MAACa,IAAI,EAAEA,IAAK;MAACK,QAAQ,EAAED;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC3D;EAEA,OAAOb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBpB,OAAA;IAAKqB,SAAS,EAAEF,IAAI,CAACG,UAAU,GAAG,mBAAmB,GAAG,UAAW;IAAAC,QAAA,gBAE/DvB,OAAA;MAAmBwB,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAACc,IAAI,CAACT,EAAE,CAAE;MAAAa,QAAA,EACnDJ,IAAI,CAACM;IAAI,GADJN,IAAI,CAACT,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEX,eAENjB,OAAA;MAAKqB,SAAS,EAAC,OAAO;MAAAE,QAAA,gBAClBvB,OAAA,CAACF,MAAM;QAAC0B,OAAO,EAAEA,CAAA,KAAKf,OAAO,CAAC;UAACC,EAAE,EAACS,IAAI,CAACT,EAAE;UAACC,KAAK,EAACQ,IAAI,CAACM;QAAI,CAAC,CAAE;QAACJ,SAAS,EAAC;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrFjB,OAAA,CAACH,iBAAiB;QAAC2B,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACa,IAAI,CAACT,EAAE,CAAE;QAACW,SAAS,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9E;EAAA,GAT+DG,KAAK;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAYnF,CAAC;AACJ;AAACd,EAAA,CAjCQF,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAmCb,eAAeA,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}