{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\Talanet Program\\\\TodoApp\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  // const completeTodo = id => {\n  //     let updatedTodos = todos.map(todo => {\n  //         if (todo.id === id) {\n  //             todo.isComplete = !todo.isComplete;\n  //         }\n  //         return todo;\n  //     });\n  //     setTodos(updatedTodos);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan for Today ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","completeTodo","_c","$RefreshReg$"],"sources":["F:/Programming/Talanet Program/TodoApp/src/components/TodoList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n        \r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo=>todo.id !== id);\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    // const completeTodo = id => {\r\n    //     let updatedTodos = todos.map(todo => {\r\n    //         if (todo.id === id) {\r\n    //             todo.isComplete = !todo.isComplete;\r\n    //         }\r\n    //         return todo;\r\n    //     });\r\n    //     setTodos(updatedTodos);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Today ?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo\r\n                todos={todos}    \r\n                completeTodo={completeTodo}\r\n                removeTodo= {removeTodo}\r\n                updateTodo = {updateTodo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,OAAO,GAAGC,IAAI,IAAI;IACpB,IAAI,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE;MACvC;IACJ;IAEA,MAAME,QAAQ,GAAG,CAACH,IAAI,EAAE,GAAGH,KAAK,CAAC;IACjCC,QAAQ,CAACK,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IACrC,IAAI,CAACA,QAAQ,CAACL,IAAI,IAAI,OAAO,CAACC,IAAI,CAACI,QAAQ,CAACL,IAAI,CAAC,EAAE;MAC/C;IACJ;IAEAH,QAAQ,CAACS,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAGC,QAAQ,GAAGG,IAAK,CAAC,CAAC;EAC9E,CAAC;EAED,MAAME,UAAU,GAAGD,EAAE,IAAI;IACrB,MAAME,SAAS,GAAG,CAAC,GAAGf,KAAK,CAAC,CAACgB,MAAM,CAACb,IAAI,IAAEA,IAAI,CAACU,EAAE,KAAKA,EAAE,CAAC;IACzDZ,QAAQ,CAACc,SAAS,CAAC;EACvB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIlB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpCxB,OAAA,CAACF,QAAQ;MAAC2B,QAAQ,EAAEpB;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/BxB,OAAA,CAACH,IAAI;MACDM,KAAK,EAAEA,KAAM;MACbuB,YAAY,EAAEA,YAAa;MAC3BT,UAAU,EAAGA,UAAW;MACxBP,UAAU,EAAIA;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAACtB,EAAA,CA/CQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}