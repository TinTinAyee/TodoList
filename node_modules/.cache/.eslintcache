[{"F:\\Programming\\Talanet Program\\react-app\\src\\index.tsx":"1","F:\\Programming\\Talanet Program\\react-app\\src\\reportWebVitals.ts":"2","F:\\Programming\\Talanet Program\\react-app\\src\\App.tsx":"3","F:\\Programming\\Talanet Program\\TodoApp\\src\\index.tsx":"4","F:\\Programming\\Talanet Program\\TodoApp\\src\\reportWebVitals.ts":"5","F:\\Programming\\Talanet Program\\TodoApp\\src\\App.tsx":"6","F:\\Programming\\Talanet Program\\TodoApp\\src\\components\\TodoForm.jsx":"7","F:\\Programming\\Talanet Program\\TodoApp\\src\\components\\TodoList.jsx":"8","F:\\Programming\\Talanet Program\\TodoApp\\src\\components\\Todo.jsx":"9"},{"size":554,"mtime":1678227780893,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1678227780007,"results":"12","hashOfConfig":"11"},{"size":1810,"mtime":1678230412950,"results":"13","hashOfConfig":"11"},{"size":554,"mtime":1678175473000,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1678175473000,"results":"16","hashOfConfig":"15"},{"size":295,"mtime":1678322902343,"results":"17","hashOfConfig":"15"},{"size":1623,"mtime":1678387549420,"results":"18","hashOfConfig":"15"},{"size":1427,"mtime":1678388426142,"results":"19","hashOfConfig":"15"},{"size":1161,"mtime":1678388423474,"results":"20","hashOfConfig":"15"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1di0dl3",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1whj2xl",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"F:\\Programming\\Talanet Program\\react-app\\src\\index.tsx",[],[],"F:\\Programming\\Talanet Program\\react-app\\src\\reportWebVitals.ts",[],[],"F:\\Programming\\Talanet Program\\react-app\\src\\App.tsx",["51"],[],"F:\\Programming\\Talanet Program\\TodoApp\\src\\index.tsx",[],[],[],"F:\\Programming\\Talanet Program\\TodoApp\\src\\reportWebVitals.ts",[],[],"F:\\Programming\\Talanet Program\\TodoApp\\src\\App.tsx",["52","53"],[],"F:\\Programming\\Talanet Program\\TodoApp\\src\\components\\TodoForm.jsx",["54","55"],[],"F:\\Programming\\Talanet Program\\TodoApp\\src\\components\\TodoList.jsx",[],[],"F:\\Programming\\Talanet Program\\TodoApp\\src\\components\\Todo.jsx",["56"],[],"import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n\r\n            <div key={todo.id} >\r\n                {todo.text}\r\n            </div>\r\n\r\n            <div className='icons'>\r\n                <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })} className='edit-icon' />\r\n                <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='delete-icon' />\r\n            </div>\r\n\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo\r\n",[],{"ruleId":"57","severity":1,"message":"58","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},{"ruleId":"57","severity":1,"message":"62","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":12},{"ruleId":"63","severity":1,"message":"62","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'TodoForm' is defined but never used.","'Todo' is defined but never used.","no-unused-vars","'TodoList' is defined but never used."]